<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ralphsaunders.co.uk</title><link href="http://ralphsaunders.co.uk/" rel="alternate"></link><link href="http://ralphsaunders.co.uk/feeds/all.atom.xml" rel="self"></link><id>http://ralphsaunders.co.uk/</id><updated>2015-05-26T14:57:00+01:00</updated><entry><title>jQuery is dead</title><link href="http://ralphsaunders.co.uk/jquery-is-dead.html" rel="alternate"></link><updated>2015-05-26T14:57:00+01:00</updated><author><name>Ralph Saunders</name></author><id>tag:ralphsaunders.co.uk,2015-05-26:jquery-is-dead.html</id><summary type="html">&lt;p&gt;Over the past twelve months it seems there’s been a surge in the usage of javascript frameworks. Everyone and their mother seems to be rolling out one of the many choices in their web builds. Whether it’s &lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt;, &lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt;, or &lt;a href="http://emberjs.com/"&gt;Ember.js&lt;/a&gt;; every front-end developer seems to be hot under the collar about feature X in framework Y. &lt;/p&gt;
&lt;p&gt;And why wouldn’t they be? Frameworks are a wonderful paradise of structured code, proven abstractions, and community support. No longer will the front-end developer have to trawl through some imposters jQuery DOM-bound spaghetti searching for that illusive function that sets the entire page in motion  &amp;mdash; yes page, not component.&lt;/p&gt;
&lt;p&gt;Or so I thought.&lt;/p&gt;
&lt;p&gt;Then I picked through an implementation of a multi-faceted search written by an Angular newbie and begrudgingly noted that bad code can happen anywhere. It seems that in actuality, tools that require more upfront knowledge do more harm than good in the hands of the inexperienced. &lt;/p&gt;
&lt;p&gt;On the face of it the code was somewhat more structured than any given piece of jQuery you may come across. It used some of the proven abstractions like controllers and models. It even had a service! Unfortunately it used most of the abstractions poorly. The controller was many hundreds of lines long and did everything on the page. The models did more than hold state and data. In essence, the tools the framework provided were missused because the developer didn’t know what they were for.&lt;/p&gt;
&lt;p&gt;Frameworks are a wonderful paradise if you have experience of the concepts they implement; they aren’t a magical replacement for good practice and discipline. That said, jQuery is definitely still dead. Here’s why.&lt;/p&gt;
&lt;p&gt;In jQuery we often see some code like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lightbox&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nx"&gt;showing&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lightbox&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="nx"&gt;lightboxContent&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Here we’ve got a lightbox showing the contents of a ‘lightboxContent’ data attribute when said element with data attribute is clicked.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This example encapsulates the approach of jQuery, where the DOM has some information and we write javascript to expose it. You can contrast this to Angular where the javascript has some information and we write a template to expose it.&lt;/p&gt;
&lt;p&gt;Here’s a similar example in Angular:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;// The parent controller
(function() {
    ‘use strict’;

    angular.module(‘demo.controller’, [‘lightbox.module’])
        .controller([‘$scope’, function($scope) {
            $scope.lightboxShowing = false;
        }])
})();

// The view
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-ng-controller=&lt;/span&gt;&lt;span class="s"&gt;“demoController”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;“dom-element”&lt;/span&gt; &lt;span class="na"&gt;data-ng-click=&lt;/span&gt;&lt;span class="s"&gt;“lightboxShowing&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;true”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Clicky&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="err"&gt;data-lightbox-directive&lt;/span&gt; &lt;span class="na"&gt;data-showing=&lt;/span&gt;&lt;span class="s"&gt;“lightboxShowing”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;My lightbox content&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Woo lightbox&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

// Angular directive
(function() {
    ‘use strict’;

    angular.module(‘lightbox.module’, [])
        .directive(‘lightboxDirective’, function() {
            return {
                transclude: true,
                scope: {
                    ‘showing’: ‘=‘
                },
                templateUrl: ‘path/to/template.html’
            }
        })
})();

// path/to/template.html
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-ng-class=&lt;/span&gt;&lt;span class="s"&gt;“{showing:&lt;/span&gt; &lt;span class="err"&gt;showing}”&lt;/span&gt; &lt;span class="na"&gt;data-ng-if=&lt;/span&gt;&lt;span class="s"&gt;“showing”&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;“lightbox-wrap”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="err"&gt;data-ng-transclude&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There’s way more code here than the jQuery example. Why is it better? Perhaps this will help…&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;// Angular directive
(function() {
    ‘use strict’;

    angular.module(‘lightbox.module’, [])
        .directive(‘lightboxDirective’, function() {
            return {
                transclude: true,
                scope: {
                    ‘showing’: ‘=‘
                },
                controller: function($scope) {
                    $scope.hide = function() {
                        $scope.showing = false;
                    }
                },
                templateUrl: ‘path/to/template.html’
            }
        })
})();

// path/to/template.html
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-ng-class=&lt;/span&gt;&lt;span class="s"&gt;“{showing:&lt;/span&gt; &lt;span class="err"&gt;showing}”&lt;/span&gt; &lt;span class="na"&gt;data-ng-if=&lt;/span&gt;&lt;span class="s"&gt;“showing”&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;“lightbox-wrap”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;data-ng-click=&lt;/span&gt;&lt;span class="s"&gt;“hide()”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hide!&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="err"&gt;data-ng-transclude&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We just added a feature to our lightbox directive without modifying any code in the view and without doing any DOM manipulation. This is the power of the template.&lt;/p&gt;
&lt;h2&gt;DOM manipulation sucks and you know it does&lt;/h2&gt;
&lt;p&gt;Have you ever looked at the source of a jQuery slider, accordion, or lightbox and seen hundreds of lines of code that are there just to manipulate how the DOM is displaying a particular state? &lt;/p&gt;
&lt;p&gt;I have - usually to fix some obscure bug that only happens after a particular sequence of things. Only moments after reading the bug report you’ve broken a sweat because you just know this bug is going to be in DOM manipulation soup. You’re going to wade through a few lines of state and many lines of addClass() and appendTo() until you reside on the floor, weeping, waiting for the misery to end.&lt;/p&gt;
&lt;p&gt;Is it any wonder why when you look at how most jQuery is written? See, when you write some jQuery you end up:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Writing javascript to find elements to bind events.&lt;/li&gt;
&lt;li&gt;Writing javascript to find elements to extract data from.&lt;/li&gt;
&lt;li&gt;Writing javascript to find elements to display that data in.&lt;/li&gt;
&lt;li&gt;Writing javascript to modify state of elements.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Compare that with Angular, where you end up:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Extending HMTL with data attributes to bind events.&lt;/li&gt;
&lt;li&gt;Crafting a template that will display data.&lt;/li&gt;
&lt;li&gt;Writing javascript to modify state of modular components.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Yeah, jQuery is dead not because frameworks make you write better code - we know they don’t - but because your framework does DOM manipulation better than you ever could.&lt;/p&gt;
&lt;p&gt;Please learn a framework properly and then come join me in my paradise.&lt;/p&gt;</summary><category term="javascript"></category></entry><entry><title>Frosted Glass With filter:blur()</title><link href="http://ralphsaunders.co.uk/frosted-glass-with-filter-blur.html" rel="alternate"></link><updated>2014-12-17T16:23:00+00:00</updated><author><name>Ralph Saunders</name></author><id>tag:ralphsaunders.co.uk,2014-12-17:frosted-glass-with-filter-blur.html</id><summary type="html">&lt;p&gt;&lt;code&gt;filter: blur()&lt;/code&gt; is an awesome part of the new-ish &lt;a href="http://www.w3.org/TR/filter-effects/"&gt;filter effects module in the
W3 CSS spec&lt;/a&gt;. In short, the filter module
allows you to apply filters &amp;mdash; like grayscale, sepia, blur, and so on
&amp;mdash; to DOM elements. It's made its way into
&lt;a href="http://caniuse.com/#search=filter"&gt;-webkit-&lt;/a&gt;, and will be in Firefox's next
release!&lt;/p&gt;
&lt;p&gt;Really, there's no excuse for not playing with it. Infact, provided you fallback
sensibly, why not use it in production?&lt;/p&gt;
&lt;h2&gt;Basic usage&lt;/h2&gt;
&lt;p&gt;Basic usage of &lt;code&gt;filter:blur()&lt;/code&gt; is very straight forward:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="na"&gt;.my-element&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;webkit-filter:&lt;/span&gt; &lt;span class="nf"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;filter:&lt;/span&gt; &lt;span class="nf"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Will blur the contents of &lt;code&gt;.my-elment&lt;/code&gt;. Here's what it looks like:&lt;/p&gt;
&lt;style type="text/css"&gt;
    .blur-me {
        -webkit-filter: blur(5px);
        filter: blur(5px);
    }
&lt;/style&gt;

&lt;p&gt;Unblurred:&lt;/p&gt;
&lt;blockquote&gt;
    Here's my amazing quote
&lt;/blockquote&gt;

&lt;p&gt;Blurred:&lt;/p&gt;
&lt;blockquote class="blur-me"&gt;
    Here's my amazing quote
&lt;/blockquote&gt;

&lt;p&gt;Note how the filter is applied to everything inside the element. Not only did it
blur the DOM content, it also blurred content specified via CSS and also the
properties themselves &amp;mdash; like the &lt;code&gt;border-left&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;This is both amazing but also sort of a pain at the same time. It means you can
apply it to images, videos, and even canvas elements! But we don't usually want
to blur absolutely everything, so there's a bit of leg work involved in
obtaining something like a frosted glass effect.&lt;/p&gt;
&lt;h2&gt;Frosted Glass with Video&lt;/h2&gt;
&lt;style type="text/css"&gt;

    .sandbox {
        position:relative;
        clear:both;
        width: 100%;
        padding-bottom: 56.25%;
        margin-right: 0;
        height: 0;
        overflow:hidden;
        margin-bottom:20px;
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
    }

    .sandbox video {
        margin-right: 0;
        float: none;
        width: 100%;
    }

    .demo-video {
        position:absolute;
        z-index: -1;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
    }

    .blurred {
        -moz-filter: blur(20px);
        -webkit-filter: blur(20px);
        filter: blur(20px);
        z-index: -2;
    }

    .sharp {
        -moz-clip-path: polygon(0 0, 0 100%, 40% 100%, 40% 0, 80% 0, 80% 100%, 100% 100%, 100% 0);
        -webkit-clip-path: polygon(0 0, 0 100%, 40% 100%, 40% 0, 80% 0, 80% 100%, 100% 100%, 100% 0);
        clip-path: polygon(0 0, 0 100%, 40% 100%, 40% 0, 80% 0, 80% 100%, 100% 100%, 100% 0);
    }

    .article .blurred-position {
        position: absolute;
        left: 40%;
        width: 40%;
        height:100%;
        box-sizing: border-box;
        padding:40px;
    }

    .article .blurred-position * {
        margin: 0;
        float: none;
        width: 100%;
        color: #fff;
    }

    .sandbox.transform {
        -moz-perspective: 1500px;
        -moz-transform: scale(.5);
        -webkit-perspective: 1500px;
        -webkit-transform: scale(.5);
        perspective: 1500px;
        transform: scale(.5);
        overflow:visible;
    }

    .sandbox.transform .demo-video {
        -moz-transform: rotateY(40deg);
        -webkit-transform: rotateY(40deg);
    }

    .sandbox.transform .sharp {
        -moz-transform: rotateY(40deg) translate(10%, 10%);
        -webkit-transform: rotateY(40deg) translate(10%, 10%);
    }

    .sandbox.transform .blurred-position {
        -moz-transform: rotateY(40deg) translate(30%, 30%);
        -webkit-transform: rotateY(40deg) translate(30%, 30%);
    }


&lt;/style&gt;

&lt;div class="sandbox constrain"&gt;
    &lt;video class="demo-video blurred" loop autoplay&gt;
        &lt;source src="./videos/frosted-glass-with-filter-blur/example.ogv" type="video/ogg" codecs="theora,vorbis"&gt;
    &lt;/video&gt;
    &lt;video class="demo-video sharp" loop autoplay&gt;
        &lt;source src="./videos/frosted-glass-with-filter-blur/example.ogv" type="video/ogg" codecs="theora,vorbis"&gt;
    &lt;/video&gt;
    &lt;div class="blurred-position"&gt;
        &lt;h2&gt;Bacon ipsum dolor amet&lt;/h2&gt;

        &lt;p&gt;Bacon ipsum dolor amet bacon tenderloin bresaola turducken meatball,
        beef short ribs sirloin. Pork loin prosciutto ribeye, sirloin short ribs
        hamburger pork chop tongue. Ham short loin corned beef meatball beef ribs.
        Sirloin chicken jowl pig pork loin meatball, salami spare ribs.&lt;/p&gt;
    &lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Pretty impressive right? To think how long we've dreamed for this to be possible
on images, only to find out we can do it on videos!&lt;/p&gt;
&lt;p&gt;It's a bit difficult to figure the above example works when you see it flat like
that, so here it is transformed a bit&amp;hellip;&lt;/p&gt;
&lt;div class="sandbox transform"&gt;
    &lt;video class="demo-video blurred" loop autoplay&gt;
        &lt;source src="./videos/frosted-glass-with-filter-blur/example.ogv" type="video/ogg" codecs="theora,vorbis"&gt;
    &lt;/video&gt;
    &lt;video class="demo-video sharp" loop autoplay&gt;
        &lt;source src="./videos/frosted-glass-with-filter-blur/example.ogv" type="video/ogg" codecs="theora,vorbis"&gt;
    &lt;/video&gt;
    &lt;div class="blurred-position"&gt;
        &lt;h2&gt;Bacon ipsum dolor amet&lt;/h2&gt;

        &lt;p&gt;Bacon ipsum dolor amet bacon tenderloin bresaola turducken meatball,
        beef short ribs sirloin. Pork loin prosciutto ribeye, sirloin short ribs
        hamburger pork chop tongue. Ham short loin corned beef meatball beef ribs.
        Sirloin chicken jowl pig pork loin meatball, salami spare ribs.&lt;/p&gt;
    &lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;We've got two &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; elements that are playing the same video, both
positioned &lt;code&gt;absolute&lt;/code&gt; with different a &lt;code&gt;z-index&lt;/code&gt; each &amp;mdash; so they sit ontop
of one another.  I'm combining the &lt;code&gt;clip-path&lt;/code&gt; property with a CSS shape defined
with &lt;code&gt;polygon&lt;/code&gt; to clip a hole in the sharp &lt;code&gt;video&lt;/code&gt; so the blurred &lt;code&gt;video&lt;/code&gt; shows
through.&lt;/p&gt;
&lt;p&gt;There's also a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element that is sitting ontop of both of the videos that
matches the position of the hole in the &lt;code&gt;clip-path&lt;/code&gt;. This is just a standard
element, so we can do things like add transparent backgrounds with &lt;code&gt;rgba()&lt;/code&gt; for
'tinted glass' effects.&lt;/p&gt;
&lt;p&gt;Here's some code for you to try:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;demo-video blurred&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;loop&lt;/span&gt; &lt;span class="err"&gt;autoplay&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;path/to/video&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;video/ogg&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;codecs=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;theora,vorbis&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;demo-video sharp&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;loop&lt;/span&gt; &lt;span class="err"&gt;autoplay&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;path/to/video&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;video/ogg&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;codecs=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;theora,vorbis&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blurred-position&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Here&amp;#39;s some text too&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    .container {
        position: relative;
        height: 0;
        padding-bottom: 56.25%; /* (16:9 aspect ratio) */
        width:100%;
    }

    .demo-video {
        position:absolute;
        top:0;
        right:0;
        bottom:0;
        left:0;
        z-index: -1;
    }

    .blurred {
        z-index: -2;
        -webkit-filter: blur(20px);
        filter: blur(20px);
    }

    .blurred-position {
        position: absolute;
        left: 40%;
        width: 40%;
        height: 100%;
        box-sizing: border-box;
        padding: 40px;
        color: #fff;
    }


    /* Use percentages so it&amp;#39;s responsive! */
    .sharp {
        -webkit-clip-path: polygon(0 0, 0 100%, 40% 100%, 40% 0, 80% 0, 80% 100%, 100% 100%, 100% 0);
        clip-path: polygon(0 0, 0 100%, 40% 100%, 40% 0, 80% 0, 80% 100%, 100% 100%, 100% 0);
    }
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;script type="text/javascript"&gt;
    // Start videos at the same time
    var videosLoaded = 0;

    var videos = [].map.call(document.querySelectorAll('video'), function(video) {
        video.pause();
        video.currentTime = 0;
        video.addEventListener('loadeddata', function() {
            videoLoaded();
        }, false)

        return video;
    })

    function videoLoaded() {
        videosLoaded ++;

        if(videosLoaded === videos.length) {
            videos.map(function(video) {
                video.play();
            })
        }
    }
&lt;/script&gt;</summary><category term="CSS"></category></entry><entry><title>Make front-end unit tests easy with karma</title><link href="http://ralphsaunders.co.uk/karma-unit-testing.html" rel="alternate"></link><updated>2014-11-25T13:45:00+00:00</updated><author><name>Ralph Saunders</name></author><id>tag:ralphsaunders.co.uk,2014-11-25:karma-unit-testing.html</id><summary type="html">&lt;p&gt;Unit tests are good but can sometimes be a pain to work with. It doesn't have to
be this way though! With a good workflow unit testing should actually help
development rather than hinder it. With that in mind, front-end unit tests should:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Source their dependencies without manual mangement&lt;/li&gt;
&lt;li&gt;Run when code changes&lt;/li&gt;
&lt;li&gt;Run in real browsers&lt;/li&gt;
&lt;li&gt;Be easy to interactively debug&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Introducing Karma&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://karma-runner.github.io/0.12/index.html"&gt;Karma test runner&lt;/a&gt; is a node
package that manages the running of unit tests and solves the issues above.&lt;/p&gt;
&lt;p&gt;Setup is pretty straight forward and for the most part self-explanatory. They do
have a &lt;a href="http://karma-runner.github.io/0.12/config/configuration-file.html"&gt;page about it on their website
though&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Below is a Karma configuration file, some things to note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I'm using Jasmine for my unit tests&lt;/li&gt;
&lt;li&gt;I'm not loading my files using a pattern like &lt;code&gt;/Source/Scripts/**/**/*.js&lt;/code&gt;
  because they need to be loaded in a specific order.&lt;/li&gt;
&lt;li&gt;Karma is going to run unit tests in the browsers defined. These browsers must
  be setup and ready to load web pages!&lt;/li&gt;
&lt;li&gt;I've set singleRun to false. This means the tests will re-run in the browser
  every time one of the files changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;karma.local.conf.js:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Karma configuration&lt;/span&gt;
&lt;span class="c1"&gt;// Generated on Tue Oct 28 2014 17:03:28 GMT+0000 (GMT Standard Time)&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;

    &lt;span class="c1"&gt;// base path that will be used to resolve all patterns (eg. files, exclude)&lt;/span&gt;
    &lt;span class="nx"&gt;basePath&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// frameworks to use&lt;/span&gt;
    &lt;span class="c1"&gt;// available frameworks: https://npmjs.org/browse/keyword/karma-adapter&lt;/span&gt;
    &lt;span class="nx"&gt;frameworks&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jasmine&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// list of files / patterns to load in the browser&lt;/span&gt;
    &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Source/Scripts/lib/bluebird-2.3.11.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Source/Scripts/lib/lodash-2.4.1.compat.min.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Source/Scripts/angular.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Source/Scripts/angular-mocks.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Source/Scripts/angular-animate.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Source/Scripts/lib/angular-google-maps.min.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Source/Scripts/lib/*.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Source/Scripts/app/**/*.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Source/Scripts/tests/**/*.js&amp;#39;&lt;/span&gt;
    &lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// list of files to exclude&lt;/span&gt;
    &lt;span class="nx"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;gulpfile.js&amp;#39;&lt;/span&gt;
    &lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// preprocess matching files before serving them to the browser&lt;/span&gt;
    &lt;span class="c1"&gt;// available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor&lt;/span&gt;
    &lt;span class="nx"&gt;preprocessors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;


    &lt;span class="c1"&gt;// test results reporter to use&lt;/span&gt;
    &lt;span class="c1"&gt;// possible values: &amp;#39;dots&amp;#39;, &amp;#39;progress&amp;#39;&lt;/span&gt;
    &lt;span class="c1"&gt;// available reporters: https://npmjs.org/browse/keyword/karma-reporter&lt;/span&gt;
    &lt;span class="nx"&gt;reporters&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;progress&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// web server port&lt;/span&gt;
    &lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9876&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// enable / disable colors in the output (reporters and logs)&lt;/span&gt;
    &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// level of logging&lt;/span&gt;
    &lt;span class="c1"&gt;// possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG&lt;/span&gt;
    &lt;span class="nx"&gt;logLevel&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOG_INFO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// enable / disable watching file and executing tests whenever any file changes&lt;/span&gt;
    &lt;span class="nx"&gt;autoWatch&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// start these browsers&lt;/span&gt;
    &lt;span class="c1"&gt;// available browser launchers: https://npmjs.org/browse/keyword/karma-launcher&lt;/span&gt;
    &lt;span class="nx"&gt;browsers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Firefox&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Chrome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IE&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;


    &lt;span class="c1"&gt;// Continuous Integration mode&lt;/span&gt;
    &lt;span class="c1"&gt;// if true, Karma captures browsers, runs the tests and exits&lt;/span&gt;
    &lt;span class="nx"&gt;singleRun&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Karma + Gulp&lt;/h2&gt;
&lt;p&gt;Running Karma from the cli directly is a bit of a chore, especially when the
arguments are probably going to be the same most of the time. Here's how I'm
using it with gulp:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;gulp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;local-test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;karma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;configFile&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/karma.local.conf.js&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Compare that with the task the build environment runs on our project:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;gulp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;remote-test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;karma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;configFile&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;__dirname&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/karma.conf.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;singleRun&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;reporters&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;teamcity&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm overwriting a few variables in the karma config as part of the remote gulp
task. I only want the test to run once and we want karma to output using the
&lt;a href="https://www.jetbrains.com/teamcity/"&gt;TeamCity&lt;/a&gt; reporter. TeamCity is the build
environment, and this means the output is present in TeamCity's build log.&lt;/p&gt;</summary><category term="npm"></category><category term="fed-tooling"></category></entry><entry><title>Automate sprites with css-sprite &amp; stylus</title><link href="http://ralphsaunders.co.uk/automatic-css-sprites.html" rel="alternate"></link><updated>2014-11-23T16:01:00+00:00</updated><author><name>Ralph Saunders</name></author><id>tag:ralphsaunders.co.uk,2014-11-23:automatic-css-sprites.html</id><summary type="html">&lt;p&gt;We all know about the benefits of using CSS sprites right? They've &lt;a href="http://alistapart.com/article/sprites"&gt;been around for ages&lt;/a&gt;, are generally seen as a good thing to do, and should be considered a standard practice.&lt;/p&gt;
&lt;p&gt;They're also a pain in the arse. CSS sprites are time consuming to create, harder to maintain, and you have to go through all that pain again to create retina assets.&lt;/p&gt;
&lt;p&gt;This is a conversation you don't want to have when you're manually maintaining CSS sprites:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;designer&lt;/em&gt; &amp;mdash; "Hey, I've updated this icon. It looks so much better now!"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;front-end developer&lt;/em&gt; &amp;mdash; "Oh nice! I'll just put it in the sprite sheet an- ... Hey, &lt;em&gt;designer&lt;/em&gt;, it's 2px wider and 1px shorter now... I'm going to have to adjust styles for most of the icons in the sprite sheet :("&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;evil* designer&lt;/em&gt; &amp;mdash; "HA HA HA! Foiled again, young front-end developer!"&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yeah, there are techniques to lessen the amount of styles that would need to be adjusted in the &amp;mdash; almost inevitable &amp;mdash; event of this occurring, but the fundamental problem remains.&lt;/p&gt;
&lt;h2&gt;npm install *&lt;/h2&gt;
&lt;p&gt;At some point between 2004 and now we developed this concept of front-end tooling.&lt;/p&gt;
&lt;p&gt;We now have task runners, package managers, CSS frameworks, boilerplates, DOM manipulation libraries, JS helper libraries, event libraries, CSS helpers, dependency managers, template languages, testing frameworks, test runners, code coverage tools, &lt;a href="https://github.com/codylindley/frontend-tools"&gt;and so much more&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Front-end tooling is awesome and automates away the pain.&lt;/p&gt;
&lt;h2&gt;npm install css-sprite&lt;/h2&gt;
&lt;p&gt;There's this node package called &lt;a href="https://www.npmjs.org/package/css-sprite/"&gt;css-sprite&lt;/a&gt;. It generates CSS sprites. You give it a bunch of images and it gives you one image and a file formatted for the CSS pre-processor of your choice (including vanilla CSS). Check out the &lt;a href="https://github.com/aslansky/css-sprite"&gt;Github repo&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;css-sprite + stylus = awesome&lt;/h3&gt;
&lt;p&gt;So I've got this directory of Christmas icons because I have no taste or self-restraint when it comes to festive activities... here's what it looks like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Source images" src="./images/dist/automatic-css-sprites/src-images.png" /&gt;&lt;/p&gt;
&lt;p&gt;I ran css-sprite with these configuration options (I'm using gulp as my task runner):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;gulp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;stylus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gulp-stylus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;gulpif&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gulp-if&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;sprite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;css-sprite&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;gulp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sprites&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;gulp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./public/img/src/sprites/*.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sprite&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_sprites&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_sprites.styl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;cssPath&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;../../../../img/build&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;processor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stylus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;orientation&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bindary-tree&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;}))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gulpif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*.png&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gulp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./public/img/build/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;gulp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./public/css/src/components/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Those config options say we want to create an image with the name &lt;code&gt;_sprites&lt;/code&gt;, a stylus stylesheet with the name &lt;code&gt;_sprites.styl&lt;/code&gt;, the image paths in the eventual compiled CSS file to reference the directory &lt;code&gt;../../../../img/build&lt;/code&gt;, to use the &lt;code&gt;stylus&lt;/code&gt; pre-processor, and to layout the icons in the generated sprite in a binary tree fashion.&lt;/p&gt;
&lt;p&gt;Here's the generated output:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Build Images + .styl file" src="./images/dist/automatic-css-sprites/build.png" /&gt;&lt;/p&gt;
&lt;p&gt;And the contents of that &lt;code&gt;_sprites.styl&lt;/code&gt; file that's ready to be compiled by stylus at a later time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;light93&lt;/span&gt;&lt;span class="x"&gt; = -5px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;alarm55&lt;/span&gt;&lt;span class="x"&gt; = -527px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bag40&lt;/span&gt;&lt;span class="x"&gt; = -5px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;balloon9&lt;/span&gt;&lt;span class="x"&gt; = -527px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bell47&lt;/span&gt;&lt;span class="x"&gt; = -1049px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bell48&lt;/span&gt;&lt;span class="x"&gt; = -1049px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bell49&lt;/span&gt;&lt;span class="x"&gt; = -5px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bell50&lt;/span&gt;&lt;span class="x"&gt; = -527px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;bible4&lt;/span&gt;&lt;span class="x"&gt; = -1049px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;cake17&lt;/span&gt;&lt;span class="x"&gt; = -1571px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;calendar167&lt;/span&gt;&lt;span class="x"&gt; = -1571px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;candle11&lt;/span&gt;&lt;span class="x"&gt; = -1571px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;candle12&lt;/span&gt;&lt;span class="x"&gt; = -5px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;candle13&lt;/span&gt;&lt;span class="x"&gt; = -527px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;candy18&lt;/span&gt;&lt;span class="x"&gt; = -1049px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;candy19&lt;/span&gt;&lt;span class="x"&gt; = -1571px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;candy20&lt;/span&gt;&lt;span class="x"&gt; = -2093px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;candy21&lt;/span&gt;&lt;span class="x"&gt; = -2093px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;champagne6&lt;/span&gt;&lt;span class="x"&gt; = -2093px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;chimney3&lt;/span&gt;&lt;span class="x"&gt; = -2093px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;christmas289&lt;/span&gt;&lt;span class="x"&gt; = -5px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;christmas290&lt;/span&gt;&lt;span class="x"&gt; = -527px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;christmas291&lt;/span&gt;&lt;span class="x"&gt; = -1049px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;christmas292&lt;/span&gt;&lt;span class="x"&gt; = -1571px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;christmas293&lt;/span&gt;&lt;span class="x"&gt; = -2093px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;coffee114&lt;/span&gt;&lt;span class="x"&gt; = -2615px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;cookie1&lt;/span&gt;&lt;span class="x"&gt; = -2615px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;document173&lt;/span&gt;&lt;span class="x"&gt; = -2615px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;donut7&lt;/span&gt;&lt;span class="x"&gt; = -2615px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;drum23&lt;/span&gt;&lt;span class="x"&gt; = -2615px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;eighth4&lt;/span&gt;&lt;span class="x"&gt; = -5px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;fireplace3&lt;/span&gt;&lt;span class="x"&gt; = -527px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;forest6&lt;/span&gt;&lt;span class="x"&gt; = -1049px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;gift67&lt;/span&gt;&lt;span class="x"&gt; = -1571px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;gift68&lt;/span&gt;&lt;span class="x"&gt; = -2093px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;gingerbread3&lt;/span&gt;&lt;span class="x"&gt; = -2615px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;glove7&lt;/span&gt;&lt;span class="x"&gt; = -3137px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;glove8&lt;/span&gt;&lt;span class="x"&gt; = -3137px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;grater1&lt;/span&gt;&lt;span class="x"&gt; = -3137px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;hat19&lt;/span&gt;&lt;span class="x"&gt; = -3137px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;heart302&lt;/span&gt;&lt;span class="x"&gt; = -3137px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;horseshoe20&lt;/span&gt;&lt;span class="x"&gt; = -3137px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;house159&lt;/span&gt;&lt;span class="x"&gt; = -5px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ice&lt;/span&gt;&lt;span class="x"&gt;-skate = -527px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;leave1&lt;/span&gt;&lt;span class="x"&gt; = -1049px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;angel7&lt;/span&gt;&lt;span class="x"&gt; = -1571px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;light94&lt;/span&gt;&lt;span class="x"&gt; = -2093px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;lollipop6&lt;/span&gt;&lt;span class="x"&gt; = -2615px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ornament3&lt;/span&gt;&lt;span class="x"&gt; = -3137px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ornament4&lt;/span&gt;&lt;span class="x"&gt; = -3659px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ornament5&lt;/span&gt;&lt;span class="x"&gt; = -3659px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;pen71&lt;/span&gt;&lt;span class="x"&gt; = -3659px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;penguin4&lt;/span&gt;&lt;span class="x"&gt; = -3659px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;present20&lt;/span&gt;&lt;span class="x"&gt; = -3659px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;reindeer3&lt;/span&gt;&lt;span class="x"&gt; = -3659px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;reindeer4&lt;/span&gt;&lt;span class="x"&gt; = -3659px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ribbon53&lt;/span&gt;&lt;span class="x"&gt; = -5px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ribbon54&lt;/span&gt;&lt;span class="x"&gt; = -527px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ribbon55&lt;/span&gt;&lt;span class="x"&gt; = -1049px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;rocking3&lt;/span&gt;&lt;span class="x"&gt; = -1571px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sack1&lt;/span&gt;&lt;span class="x"&gt; = -2093px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;santa&lt;/span&gt;&lt;span class="x"&gt;-claus = -2615px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;shooting&lt;/span&gt;&lt;span class="x"&gt;-star = -3137px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sign16&lt;/span&gt;&lt;span class="x"&gt; = -3659px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sled&lt;/span&gt;&lt;span class="x"&gt; = -4181px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;snow&lt;/span&gt;&lt;span class="x"&gt;-globe = -4181px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;snowflake146&lt;/span&gt;&lt;span class="x"&gt; = -4181px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;snowflake147&lt;/span&gt;&lt;span class="x"&gt; = -4181px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;snowing10&lt;/span&gt;&lt;span class="x"&gt; = -4181px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;snowman18&lt;/span&gt;&lt;span class="x"&gt; = -4181px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;snowman19&lt;/span&gt;&lt;span class="x"&gt; = -4181px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;snowman20&lt;/span&gt;&lt;span class="x"&gt; = -4181px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sparkler&lt;/span&gt;&lt;span class="x"&gt; = -5px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;stamp12&lt;/span&gt;&lt;span class="x"&gt; = -527px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;star179&lt;/span&gt;&lt;span class="x"&gt; = -1049px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;star180&lt;/span&gt;&lt;span class="x"&gt; = -1571px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;star181&lt;/span&gt;&lt;span class="x"&gt; = -2093px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;star182&lt;/span&gt;&lt;span class="x"&gt; = -2615px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;star183&lt;/span&gt;&lt;span class="x"&gt; = -3137px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;star184&lt;/span&gt;&lt;span class="x"&gt; = -3659px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;star185&lt;/span&gt;&lt;span class="x"&gt; = -4181px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;stocking1&lt;/span&gt;&lt;span class="x"&gt; = -4703px -5px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;teddy&lt;/span&gt;&lt;span class="x"&gt; = -4703px -527px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;thermometer57&lt;/span&gt;&lt;span class="x"&gt; = -4703px -1049px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;toast&lt;/span&gt;&lt;span class="x"&gt; = -4703px -1571px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;tree113&lt;/span&gt;&lt;span class="x"&gt; = -4703px -2093px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;tree114&lt;/span&gt;&lt;span class="x"&gt; = -4703px -2615px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;tree115&lt;/span&gt;&lt;span class="x"&gt; = -4703px -3137px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;turkey7&lt;/span&gt;&lt;span class="x"&gt; = -4703px -3659px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;twig&lt;/span&gt;&lt;span class="x"&gt; = -4703px -4181px 512px 512px&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;wine63&lt;/span&gt;&lt;span class="x"&gt; = -5px -4703px 512px 512px&lt;/span&gt;

&lt;span class="x"&gt;sprite-width(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;
&lt;span class="x"&gt;  width &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;[2]&lt;/span&gt;

&lt;span class="x"&gt;sprite-height(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;
&lt;span class="x"&gt;  height &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;[3]&lt;/span&gt;

&lt;span class="x"&gt;sprite-position(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;
&lt;span class="x"&gt;  background-position &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;[0]  &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;[1]&lt;/span&gt;

&lt;span class="x"&gt;sprite(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;
&lt;span class="x"&gt;  sprite-position(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;
&lt;span class="x"&gt;  background-repeat no-repeat&lt;/span&gt;
&lt;span class="x"&gt;  overflow hidden&lt;/span&gt;
&lt;span class="x"&gt;  display block&lt;/span&gt;
&lt;span class="x"&gt;  sprite-width(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;
&lt;span class="x"&gt;  sprite-height(&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;sprite&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;

&lt;span class="x"&gt;.icon&lt;/span&gt;
&lt;span class="x"&gt;  background-image url(&amp;#39;../../../../img/build/_sprites.png&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This &lt;code&gt;_sprites.styl&lt;/code&gt; file can then be referenced by other .styl files in the build...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;compile.styl:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;185&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;230&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;185&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;230&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="cp"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;components/_sprites.styl&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;components/modular&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;components/main&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;components/modular.styl:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="na"&gt;.constrained&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;max-width:&lt;/span&gt;&lt;span class="err"&gt;1180&lt;/span&gt;&lt;span class="nf"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin:&lt;/span&gt;&lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="nf"&gt;auto&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="na"&gt;.candy-20&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;sprite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;$candy20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then when compiled by stylus we get this output:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;compiled.css:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="na"&gt;.icon&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image:&lt;/span&gt; &lt;span class="nf"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="no"&gt;..&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="no"&gt;..&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="no"&gt;..&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="no"&gt;..&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="no"&gt;img&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="no"&gt;build&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="no"&gt;_sprites.png&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="na"&gt;.constrained&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;max-width:&lt;/span&gt; &lt;span class="err"&gt;1180&lt;/span&gt;&lt;span class="nf"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin:&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="nf"&gt;auto&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="na"&gt;.candy-20&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-position:&lt;/span&gt; &lt;span class="err"&gt;-2093&lt;/span&gt;&lt;span class="nf"&gt;px&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="no"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-repeat:&lt;/span&gt; &lt;span class="nf"&gt;no-repeat&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow:&lt;/span&gt; &lt;span class="nf"&gt;hidden&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display:&lt;/span&gt; &lt;span class="nf"&gt;block&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width:&lt;/span&gt; &lt;span class="err"&gt;512&lt;/span&gt;&lt;span class="nf"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="err"&gt;512&lt;/span&gt;&lt;span class="nf"&gt;px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="na"&gt;.primary&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color:&lt;/span&gt; &lt;span class="c"&gt;#b905e6;&lt;/span&gt;
  &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="c"&gt;#fff;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="na"&gt;.secondary&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color:&lt;/span&gt; &lt;span class="nf"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;185&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;230&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="no"&gt;.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="c"&gt;#fff;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it&amp;hellip; CSS sprites without the hassle.&lt;/p&gt;</summary><category term="npm"></category><category term="fed-tooling"></category></entry></feed>